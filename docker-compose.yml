# Dockerの定義
# 本番環境用
# docker compose up -d --build で実行

services:
  # http://localhost:3000/でReactアプリにアクセスするのに使用
  react-app:
    build:
      context: ./react-app
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    restart: always

  # http://localhost:8000/でAPIにアクセスするのに使用
  fastapi:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    environment:
      - PYTHONPATH=/app/backend
      - PYTHONUNBUFFERED=1
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app/backend
      - ./backend/alembic.ini:/app/alembic.ini
      - ./backend/alembic:/app/alembic
    working_dir: /app
    command: >
      uvicorn backend.main:app
      --host 0.0.0.0
      --port 8000
      --workers 1
      --proxy-headers
      --log-level debug
    restart: always
    depends_on:
      db:
        condition: service_healthy

  # PostgreSQL
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      TZ: Asia/Tokyo
      PGTZ: Asia/Tokyo
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    healthcheck:  # ヘルスチェックを追加
      test: ["CMD-SHELL", "pg_isready -U user -d mydatabase"]
      interval: 10s
      timeout: 5s
      retries: 5

  # http://localhost:8080/でデータベースの内容を確認するのに使用
  adminer:
    image: adminer
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - db

volumes:
  db_data:
