# Dockerの定義

services:
  # http://localhost:3000/でReactアプリにアクセスするのに使用
  react-app:
    build:
      context: .
      dockerfile: ./react-app/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./react-app:/homepage/react-app        # ホストとコンテナのディレクトリをマウント
      - /homepage/react-app/node_modules        # コンテナ内のnode_modulesを空ボリュームで確保
    command: npm start

  # http://localhost:8000/でAPIにアクセスするのに使用
  fastapi:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    volumes:
      - ./backend:/app/backend
      - ./backend/alembic.ini:/app/alembic.ini  # alembic.iniをマウント
      - ./backend/alembic:/app/alembic  # Alembicフォルダのマウント
    working_dir: /app  # /appディレクトリを基準に設定
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app/backend
    command: uvicorn backend.main:app --host 0.0.0.0 --port 8000 --workers 4 --reload


  # PostgreSQL
  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_DB: mydatabase
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      TZ: Asia/Tokyo
      PGTZ: Asia/Tokyo
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  # http://localhost:8080/でデータベースの内容を確認するのに使用
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"


  # mysql_temp:
  #   image: mysql:8.0
  #   environment:
  #     MYSQL_DATABASE: laravel
  #     MYSQL_USER: maru
  #     MYSQL_PASSWORD: Mm19871021
  #     MYSQL_ROOT_PASSWORD: root_password
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - ./production_dump.sql:/docker-entrypoint-initdb.d/production_dump.sql

volumes:
  db_data:
